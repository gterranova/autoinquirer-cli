{
    "$id": "http://json-schema.org/draft-06/schema#",
    "$schema": "http://json-schema.org/draft-06/schema#",
    "type": "object",
    "properties": {
        "duediligence": {
            "type": "object",
            "properties": {},
            "$proxy": {
                "proxyName": "Dispatcher",
                "initParams": ["..\\duediligence\\schema.json", "..\\duediligence\\data.json"]
            }                  
        },
        "filesystem": {
            "type": "object",
            "properties": {},
            "$proxy": {
                "proxyName": "FileSystemDataSource",
                "initParams": ["."],
                "params": { "rootDir": "." }
            }                  
        },
        "parentFilesystem": {
            "type": "object",
            "properties": {},
            "$proxy": {
                "proxyName": "FileSystemDataSource",
                "initParams": ["."],
                "params": { "rootDir": ".." }
            }                  
        },
        "other": {
            "type": "object",
            "properties": {
                "testCheck": {
                    "title": "Test",
                    "type": "boolean",
                    "$expressionProperties": {
                        "model.dependantField": "model.testCheck? 'enabled': 'disabled'"
                    }
                },
                "dependantField": {
                    "title": "On/off field",
                    "type": "string",
                    "$expressionProperties": {
                        "templateOptions.disabled": "model.testCheck"
                    }        
                },        
                "myArray": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": { "type": "string" },
                            "one2oneRef": { "type": "string", "$data": { "path": "other/myRef1", "remoteField": "one2one" } },
                            "one2manyRefs": { "type": "array", "items": { "type": "string", "$data": { "path": "other/myRef1", "remoteField": "one2many" } } },
                            "many2manyRefs": { "type": "array", "items": { "type": "string", "$data": { "path": "other/myObj", "remoteField": "many2many" } } }
                        }
                    }
                },
                "myRef1": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": { "type": "string" },
                            "one2one": {
                                "type": "string",
                                "$data": { "path": "../../../myArray", "remoteField": "one2oneRef" }
                            },
                            "one2many": {
                                "type": "string",
                                "$data": { "path": "../../../myArray", "remoteField": "one2manyRefs" }
                            },
                            "many2many": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "$data": { "path": "../../../myArray", "remoteField": "many2manyRefs" }
                                }
                            }        
                        }
                    }
                },
                "myObj": {
                    "type":"array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "many2many": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "$data": { "path": "other/myArray", "remoteField": "many2manyRefs" }
                                }
                            }        
                        }        
                    }
                }
            }             
        }
    }
}